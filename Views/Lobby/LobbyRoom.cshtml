@model YourTurn.Web.Models.Lobby

@{
    var currentPlayerName = ViewBag.CurrentPlayerName?.ToString();
    var currentPlayer = Model.Players.FirstOrDefault(p => p.Name == currentPlayerName);
    var currentPlayerTeam = currentPlayer?.Team ?? "";
    var isHost = Model.HostPlayerName == ViewBag.CurrentPlayerName?.ToString();
    var gameState = Model.GameState ?? new GameState { IsWaitingForVolunteers = true };
    var team1Volunteer = gameState.Team1Volunteer;
    var team2Volunteer = gameState.Team2Volunteer;
}

@Html.AntiForgeryToken()

<div class="d-flex justify-content-between align-items-center mb-3">
    <form method="post" action="/Lobby/Leave" class="d-inline">
        <input type="hidden" name="code" value="@Model.LobbyCode" />
        <button type="submit" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Lobiden AyrÄ±l
        </button>
    </form>
    <h2 class="text-center mb-0">Lobi Kodu: <span id="lobbyCode" class="text-warning" style="cursor: pointer; user-select: all;" onclick="copyLobbyCode()" title="Kopyalamak iÃ§in tÄ±klayÄ±n">@Model.LobbyCode</span></h2>
    <div style="width: 140px;"></div> <!-- Spacing iÃ§in boÅŸ div -->
</div>

@if (isHost && !Model.IsGameStarted)
{
    <div class="row mb-4 justify-content-center">
        <!-- TakÄ±m SeÃ§meyen Oyuncular Card -->
        <div class="col-md-4 d-flex justify-content-end">
            <div class="card w-100 border-secondary">
                <div class="card-body p-2">
                    @if (Model.Players.Any(p => string.IsNullOrEmpty(p.Team)))
                    {
                        <ul class="list-group mb-0">
                            @foreach (var player in Model.Players.Where(p => string.IsNullOrEmpty(p.Team)))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @player.Name
                                    @if (player.Name == currentPlayerName)
                                    {
                                        <span class="badge bg-success">Sen</span>
                                    }
                                    @if (Model.RefereeName == player.Name)
                                    {
                                        <span class="badge bg-info"><i class="fas fa-gavel"></i> Hakem</span>
                                    }
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-center text-muted py-3">Seyirci Yok</div>
                    }
                </div>
            </div>
        </div>
        <!-- Oyun YÃ¶netimi & Kategori Card -->
        <div class="col-md-5 d-flex justify-content-start">
            <div class="card mb-4" style="max-width: 600px; width:100%">
                <div class="card-body">
                    <!-- Kategori SeÃ§imi (kÃ¼Ã§Ã¼ltÃ¼lmÃ¼ÅŸ ve yatay) -->
                    <div class="row align-items-center mb-2">
                        <div class="col-auto">
                            <label for="categorySelect" class="col-form-label mb-0"><strong>Kategori:</strong></label>
                        </div>
                        <div class="col">
                            @if (string.IsNullOrEmpty(Model.Category))
                            {
                                <form method="post" action="/Lobby/ChooseCategory" class="d-flex gap-2">
                                    <input type="hidden" name="code" value="@Model.LobbyCode" />
                                    <select class="form-select form-select-sm w-auto" name="category" id="categorySelect" required>
                                        <option value="">SeÃ§in</option>
                                        <option value="Genel KÃ¼ltÃ¼r">Genel KÃ¼ltÃ¼r</option>
                                        <option value="Spor">Spor</option>
                                        <option value="Tarih">Tarih</option>
                                        <option value="Bilim">Bilim</option>
                                        <option value="Sanat">Sanat</option>
                                        <option value="CoÄŸrafya">CoÄŸrafya</option>
                                        <option value="EÄŸlence">EÄŸlence</option>
                                        <option value="Teknoloji">Teknoloji</option>
                                    </select>
                                    <button type="submit" class="btn btn-primary btn-sm">SeÃ§</button>
                                </form>
                            }
                            else
                            {
                                <span class="badge bg-success fs-6">@Model.Category</span>
                                <form method="post" action="/Lobby/ChooseCategory" class="d-inline ms-2">
                                    <input type="hidden" name="code" value="@Model.LobbyCode" />
                                    <input type="hidden" name="category" value="" />
                                    <button type="submit" class="btn btn-sm btn-outline-secondary">DeÄŸiÅŸtir</button>
                                </form>
                            }
                        </div>
                    </div>
                    <!-- TakÄ±m YÃ¶netimi (kompakt) -->
                    <div class="row g-2 align-items-center">
                        <div class="col">
                            <form method="post" action="/Lobby/RandomizeTeams" class="d-inline">
                                <input type="hidden" name="code" value="@Model.LobbyCode" />
                                <button type="submit" class="btn btn-success btn-sm w-100" onclick="return confirm('OyuncularÄ± rastgele takÄ±mlara daÄŸÄ±tmak istediÄŸinizden emin misiniz?')">
                                    <i class="fas fa-random"></i> Rastgele DaÄŸÄ±t
                                </button>
                            </form>
                        </div>
                        <div class="col">
                            <form method="post" action="/Lobby/ResetTeams" class="d-inline">
                                <input type="hidden" name="code" value="@Model.LobbyCode" />
                                <button type="submit" class="btn btn-warning btn-sm w-100" onclick="return confirm('TÃ¼m takÄ±m atamalarÄ±nÄ± sÄ±fÄ±rlamak istediÄŸinizden emin misiniz?')">
                                    <i class="fas fa-undo"></i> TakÄ±mlarÄ± SÄ±fÄ±rla
                                </button>
                            </form>
                        </div>
                    </div>
                    <div class="mt-2">
                        <small class="text-muted">
                            <i class="fas fa-info-circle"></i> Rastgele daÄŸÄ±tma iÃ§in en az 2 takÄ±m seÃ§meyen oyuncu olmasÄ± gerekiyor.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(Model.Category))
{
    <p class="text-center text-muted">Kategori: <strong class="text-success">@Model.Category</strong></p>
}
else
{
    <p class="text-center text-muted">Kategori: <em class="text-warning">Host tarafÄ±ndan seÃ§ilmeyi bekliyor...</em></p>
}

<!-- Hata ve BaÅŸarÄ± MesajlarÄ± -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Hata:</strong> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>BaÅŸarÄ±lÄ±:</strong> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
<!-- Hakem seÃ§imi ve rozet -->
@if (string.IsNullOrEmpty(Model.RefereeName))
{
    <div class="text-center mb-3">
        <form method="post" action="/Lobby/BecomeReferee">
            <input type="hidden" name="code" value="@Model.LobbyCode" />
            <button type="submit" class="btn btn-outline-info">
                <i class="fas fa-gavel"></i> Hakem olmak istiyorum
            </button>
        </form>
    </div>
}
else if (Model.RefereeName == currentPlayerName)
{
    <div class="text-center mb-3">
        <form method="post" action="/Lobby/LeaveReferee">
            <input type="hidden" name="code" value="@Model.LobbyCode" />
            <button type="submit" class="btn btn-outline-danger">
                <i class="fas fa-times"></i> Hakemlikten AyrÄ±l
            </button>
        </form>
    </div>
}

<!-- TakÄ±m kartlarÄ±nÄ±n Ã¼stÃ¼nde hakem kutusu -->
@if (!string.IsNullOrEmpty(Model.RefereeName))
{
    <div class="row mb-2">
        <div class="col-12 d-flex justify-content-center">
            <div class="bg-info text-white rounded px-3 py-1 shadow-sm" style="display:inline-block; font-size:1rem;">
                <i class="fas fa-gavel"></i> Hakem: <strong>@Model.RefereeName</strong>
            </div>
        </div>
    </div>
}

<div class="row mt-4">
    <!-- KÄ±rmÄ±zÄ± TakÄ±m (Sol) -->
    <div class="col-md-6 d-flex justify-content-end">
        <div class="card w-75 border-danger">
            <div class="card-header bg-danger text-white text-center">
                <h4 class="mb-0">ðŸ”´ KÄ±rmÄ±zÄ± TakÄ±m</h4>
            </div>
            <div class="card-body d-flex flex-column justify-content-between" style="min-height: 350px;">
                <!-- Ãœstte GÃ¶nÃ¼llÃ¼ Ol/GÃ¶nÃ¼llÃ¼lÃ¼kten Ã‡Ä±k butonu -->
                <div class="mb-3 text-center">
                    @if (currentPlayerTeam == "Sol")
                    {
                        if (team1Volunteer != currentPlayerName)
                        {
                            <button class="btn btn-danger" onclick="volunteerForTeam('Sol')">
                                <i class="fas fa-hand-paper"></i> GÃ¶nÃ¼llÃ¼ Ol
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-warning" onclick="withdrawVolunteer('Sol')">
                                <i class="fas fa-times"></i> GÃ¶nÃ¼llÃ¼lÃ¼kten Ã‡Ä±k
                            </button>
                        }
                    }
                </div>
                <!-- TakÄ±m oyuncularÄ± listesi -->
                <ul class="list-group mb-3">
                    @foreach (var player in Model.Players.Where(p => p.Team == "Sol"))
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @player.Name
                            @if (player.Name == currentPlayerName)
                            {
                                <span class="badge bg-success">Sen</span>
                            }
                            @if (Model.GameState?.Team1Volunteer == player.Name)
                            {
                                <span class="badge bg-danger">GÃ¶nÃ¼llÃ¼</span>
                            }
                            @if (Model.RefereeName == player.Name)
                            {
                                <span class="badge bg-info"><i class="fas fa-gavel"></i> Hakem</span>
                            }
                        </li>
                    }
                </ul>
                <!-- Altta TakÄ±ma KatÄ±l butonu veya bilgi -->
                <div class="text-center mt-auto">
                    @if (!Model.IsGameStarted)
                    {
                        if (currentPlayerTeam != "Sol")
                        {
                            <form method="post" action="/Lobby/ChooseTeam">
                                <input type="hidden" name="code" value="@Model.LobbyCode" />
                                <input type="hidden" name="playerName" value="@currentPlayerName" />
                                <input type="hidden" name="team" value="Sol" />
                                <button type="submit" class="btn btn-danger w-100">
                                    @(string.IsNullOrEmpty(currentPlayerTeam) ? "KÄ±rmÄ±zÄ± TakÄ±ma KatÄ±l" : "KÄ±rmÄ±zÄ± TakÄ±ma GeÃ§")
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="alert alert-success mt-2 mb-0 p-2">
                                <i class="fas fa-check"></i> Bu takÄ±mdasÄ±nÄ±z
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Mavi TakÄ±m (SaÄŸ) -->
    <div class="col-md-6 d-flex justify-content-start">
        <div class="card w-75 border-primary">
            <div class="card-header bg-primary text-white text-center">
                <h4 class="mb-0">ðŸ”µ Mavi TakÄ±m</h4>
            </div>
            <div class="card-body d-flex flex-column justify-content-between" style="min-height: 350px;">
                <!-- Ãœstte GÃ¶nÃ¼llÃ¼ Ol/GÃ¶nÃ¼llÃ¼lÃ¼kten Ã‡Ä±k butonu -->
                <div class="mb-3 text-center">
                    @if (currentPlayerTeam == "SaÄŸ")
                    {
                        if (team2Volunteer != currentPlayerName)
                        {
                            <button class="btn btn-primary" onclick="volunteerForTeam('SaÄŸ')">
                                <i class="fas fa-hand-paper"></i> GÃ¶nÃ¼llÃ¼ Ol
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-warning" onclick="withdrawVolunteer('SaÄŸ')">
                                <i class="fas fa-times"></i> GÃ¶nÃ¼llÃ¼lÃ¼kten Ã‡Ä±k
                            </button>
                        }
                    }
                </div>
                <!-- TakÄ±m oyuncularÄ± listesi -->
                <ul class="list-group mb-3">
                    @foreach (var player in Model.Players.Where(p => p.Team == "SaÄŸ"))
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @player.Name
                            @if (player.Name == currentPlayerName)
                            {
                                <span class="badge bg-success">Sen</span>
                            }
                            @if (Model.GameState?.Team2Volunteer == player.Name)
                            {
                                <span class="badge bg-primary">GÃ¶nÃ¼llÃ¼</span>
                            }
                            @if (Model.RefereeName == player.Name)
                            {
                                <span class="badge bg-info"><i class="fas fa-gavel"></i> Hakem</span>
                            }
                        </li>
                    }
                </ul>
                <!-- Altta TakÄ±ma KatÄ±l butonu veya bilgi -->
                <div class="text-center mt-auto">
                    @if (!Model.IsGameStarted)
                    {
                        if (currentPlayerTeam != "SaÄŸ")
                        {
                            <form method="post" action="/Lobby/ChooseTeam">
                                <input type="hidden" name="code" value="@Model.LobbyCode" />
                                <input type="hidden" name="playerName" value="@currentPlayerName" />
                                <input type="hidden" name="team" value="SaÄŸ" />
                                <button type="submit" class="btn btn-primary w-100">
                                    @(string.IsNullOrEmpty(currentPlayerTeam) ? "Mavi TakÄ±ma KatÄ±l" : "Mavi TakÄ±ma GeÃ§")
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="alert alert-success mt-2 mb-0 p-2">
                                <i class="fas fa-check"></i> Bu takÄ±mdasÄ±nÄ±z
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.IsGameStarted && !string.IsNullOrEmpty(currentPlayerTeam))
{
    <div class="text-center mt-3">
        <form method="post" action="/Lobby/LeaveTeam" class="d-inline">
            <input type="hidden" name="code" value="@Model.LobbyCode" />
            <input type="hidden" name="playerName" value="@currentPlayerName" />
            <button type="submit" class="btn btn-warning">TakÄ±mdan Ã‡Ä±k</button>
        </form>
    </div>
}

<!-- Oyunu BaÅŸlatma -->
@if (isHost && !Model.IsGameStarted)
{
    <div class="text-center mt-4">
        @{
            var team1Count = Model.Players.Count(p => p.Team == "Sol");
            var team2Count = Model.Players.Count(p => p.Team == "SaÄŸ");
            var hasVolunteers = Model.GameState?.Team1Volunteer != null && Model.GameState?.Team2Volunteer != null;
            var canStartGame = !string.IsNullOrEmpty(Model.Category) && team1Count > 0 && team2Count > 0 && hasVolunteers;
        }
        
        @if (canStartGame)
        {
            <form method="post" action="/Lobby/StartGame">
                <input type="hidden" name="code" value="@Model.LobbyCode" />
                <button type="submit" class="btn btn-success btn-lg">
                    <i class="fas fa-play"></i> Oyunu BaÅŸlat
                </button>
            </form>
        }
        else
        {
            <button class="btn btn-success btn-lg" disabled title="Oyunu baÅŸlatmak iÃ§in kategori seÃ§in, her takÄ±mda en az bir oyuncu olsun ve her takÄ±mdan bir gÃ¶nÃ¼llÃ¼ olsun">
                <i class="fas fa-play"></i> Oyunu BaÅŸlat
            </button>
            <div class="text-muted mt-2">
                <small>
                    @if (string.IsNullOrEmpty(Model.Category))
                    {
                        <span class="text-warning">â€¢ Kategori seÃ§ilmedi</span><br />
                    }
                    @if (team1Count == 0)
                    {
                        <span class="text-warning">â€¢ KÄ±rmÄ±zÄ± takÄ±mda oyuncu yok</span><br />
                    }
                    @if (team2Count == 0)
                    {
                        <span class="text-warning">â€¢ Mavi takÄ±mda oyuncu yok</span><br />
                    }
                    @if (!hasVolunteers)
                    {
                        <span class="text-warning">â€¢ Her takÄ±mdan bir gÃ¶nÃ¼llÃ¼ olmasÄ± gerekiyor</span>
                    }
                </small>
            </div>
        }
    </div>
}



@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script src="/js/peer-hosting.js"></script>
    <script>
        // Data attributes for peer hosting system
        document.body.setAttribute('data-lobby-code', '@Model.LobbyCode');
        document.body.setAttribute('data-player-name', '@currentPlayerName');
        
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/LobbyHub")
            .build();

        connection.start().then(() => {
            connection.invoke("AddToGroup", "@Model.LobbyCode");
            // Register player connection
            connection.invoke("RegisterPlayer", "@currentPlayerName");
        });

        connection.on("UpdateLobby", function () {
            location.reload();
        });

        connection.on("PeerHostRegistered", function (hostIP, hostPort) {
            console.log(`Peer host registered: ${hostIP}:${hostPort}`);
            updatePeerHostingUI(hostIP, hostPort, true);
        });

        connection.on("PeerHostOffline", function () {
            console.log("Peer host went offline");
            updatePeerHostingUI(null, null, false);
        });

        connection.on("LobbyClosed", function (message) {
            console.log("Lobby closed:", message);
            alert(message);
            window.location.href = "/Home/JoinLobby";
        });

        function volunteerForTeam(team) {
            fetch('/Lobby/VolunteerForTeam', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    code: '@Model.LobbyCode',
                    team: team
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    alert(data.message || 'Bir hata oluÅŸtu');
                }
            })
            .catch(error => {
                console.error('GÃ¶nÃ¼llÃ¼ olma hatasÄ±:', error);
                alert('Bir hata oluÅŸtu');
            });
        }

        function withdrawVolunteer(team) {
            fetch('/Lobby/WithdrawVolunteer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    code: '@Model.LobbyCode',
                    team: team
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    alert(data.message || 'Bir hata oluÅŸtu');
                }
            })
            .catch(error => {
                console.error('GÃ¶nÃ¼llÃ¼lÃ¼kten Ã§Ä±kma hatasÄ±:', error);
                alert('Bir hata oluÅŸtu');
            });
        }

        function updatePeerHostingUI(hostIP, hostPort, isOnline) {
            const peerHostingInfo = document.getElementById('peer-hosting-info');
            if (peerHostingInfo) {
                if (isOnline && hostIP && hostPort) {
                    peerHostingInfo.innerHTML = `
                        <div class="alert alert-success">
                            <strong><i class="fas fa-server"></i> Peer Hosting Aktif</strong><br>
                            Host: @Model.HostPlayerName<br>
                            IP: ${hostIP}<br>
                            Port: ${hostPort}
                        </div>
                    `;
                } else {
                    peerHostingInfo.innerHTML = `
                        <div class="alert alert-warning">
                            <strong><i class="fas fa-exclamation-triangle"></i> Peer Host Ã‡evrimdÄ±ÅŸÄ±</strong><br>
                            Host baÄŸlantÄ±sÄ± kesildi. Oyun devam edemez.
                        </div>
                    `;
                }
            }
        }

        // Oyun baÅŸladÄ±ÄŸÄ±nda tÃ¼m oyuncularÄ± oyun sayfasÄ±na yÃ¶nlendir
        connection.on("GameStarted", function () {
            window.location.href = "/Game/Game?code=@Model.LobbyCode";
        });

        function copyLobbyCode() {
            const lobbyCode = document.getElementById('lobbyCode');
            const codeText = lobbyCode.textContent;
            
            // Modern Clipboard API kullan (destekleniyorsa)
            if (navigator.clipboard && window.isSecureContext) {
                navigator.clipboard.writeText(codeText).then(() => {
                    showCopyFeedback();
                }).catch(() => {
                    // Fallback to old method
                    fallbackCopy();
                });
            } else {
                // Fallback method for older browsers
                fallbackCopy();
            }
        }
        
        function fallbackCopy() {
            const lobbyCode = document.getElementById('lobbyCode');
            const tempInput = document.createElement('input');
            tempInput.value = lobbyCode.textContent;
            tempInput.style.position = 'absolute';
            tempInput.style.left = '-9999px';
            document.body.appendChild(tempInput);
            tempInput.select();
            tempInput.setSelectionRange(0, 99999); // For mobile devices
            document.execCommand('copy');
            document.body.removeChild(tempInput);
            showCopyFeedback();
        }
        
        function showCopyFeedback() {
            const lobbyCode = document.getElementById('lobbyCode');
            const originalText = lobbyCode.textContent;
            const originalClass = lobbyCode.className;
            
            // Visual feedback
            lobbyCode.textContent = 'âœ“ KopyalandÄ±!';
            lobbyCode.className = 'text-success';
            lobbyCode.style.fontWeight = 'bold';
            
            // 2 saniye sonra geri al
            setTimeout(() => {
                lobbyCode.textContent = originalText;
                lobbyCode.className = originalClass;
                lobbyCode.style.fontWeight = 'normal';
            }, 2000);
        }
    </script>
}