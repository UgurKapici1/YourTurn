@* Service injection removed; use ViewModel flags instead *@
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model YourTurn.Web.Controllers.GameController.GameViewModel

@{
    ViewData["Title"] = "Oyun - " + Model.Lobby.Category;
    var currentPlayerName = ViewBag.CurrentPlayerName?.ToString();
    var gameState = Model.Lobby.GameState;
    var isMyTurn = gameState?.CurrentTurn == currentPlayerName;
    var isActivePlayer = currentPlayerName == gameState?.ActivePlayer1 || currentPlayerName == gameState?.ActivePlayer2;
    var currentPlayer = Model.Lobby.Players.FirstOrDefault(p => p.Name == currentPlayerName);
    var currentPlayerTeam = currentPlayer?.Team ?? "";
    var tokenSet = Antiforgery.GetAndStoreTokens(Context);
}

@Html.AntiForgeryToken()

<div class="container-fluid mt-3">
    <!-- Üst Bilgi Paneli -->
    <div class="row">
        <div class="col-12">
            <div class="card bg-dark text-white mb-3">
                <div class="card-body text-center">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div></div> <!-- Spacing -->
                        <h4> Kategori: @Model.Lobby.Category </h4>
                        @if (Model.Lobby.HostPlayerName == currentPlayerName)
                        {
                            <button class="btn btn-warning btn-sm" onclick="resetGame()" title="Oyunu sıfırla ve lobiye dön">
                                <i class="fas fa-undo"></i> Oyunu Sıfırla
                            </button>
                        }
                    </div>
                    <div class="row">
                        <div class="col-4 text-start">
                            <h5 class="text-danger">🔴 Kırmızı Takım: <span id="team1Score">@gameState?.Team1Score</span></h5>
                            <div id="team1Active">
                                    <small>Aktif: @gameState?.ActivePlayer1</small>
                            </div>
                        </div>
                        <div class="col-4 text-center">
                            <div id="gameStatus">
                                @if (gameState?.IsGameActive == true)
                                {
                                    <span class="badge bg-success fs-6">Oyun Devam Ediyor</span>
                                }
                                else if (!string.IsNullOrEmpty(gameState?.Winner))
                                {
                                    <span class="badge bg-warning fs-6">
                                        @(gameState.Winner == "Sol" ? "🔴 Kırmızı Takım" : "🔵 Mavi Takım") Kazandı!
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <h5 class="text-primary">🔵 Mavi Takım: <span id="team2Score">@gameState?.Team2Score</span></h5>
                            <div id="team2Active">
                                    <small>Aktif: @gameState?.ActivePlayer2</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Süre Çubuğu -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header text-center">
                    <h5>⏱️ Süre Çubuğu</h5>
                </div>
                <div class="card-body">
                    <div class="position-relative" style="height: 40px;">
                        <div class="bg-dark" style="height: 20px; width: 100%; position: absolute; top: 10px; border-radius: 10px; border: 2px solid #fff;"></div>
                        <div class="bg-danger" style="height: 20px; width: 10%; position: absolute; top: 10px; left: 0; border-radius: 10px 0 0 10px;"></div>
                        <div class="bg-primary" style="height: 20px; width: 10%; position: absolute; top: 10px; right: 0; border-radius: 0 10px 10px 0;"></div>
                        <div class="position-absolute" style="left: 50%; top: 5px; transform: translateX(-50%); width: 2px; height: 30px; background: #fff;"></div>
                        <div id="movingPoint" class="position-absolute" style="top: 0px; transform: translateX(-50%); font-size: 25px; transition: left 0.25s cubic-bezier(0.4, 0, 0.2, 1);">
                            ⚡
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Oyun Sonu -->
    @if (gameState?.IsGameActive == false && !string.IsNullOrEmpty(gameState.Winner))
    {
        <div class="row mb-4">
            <div class="col-12 text-center">
                @if (Model.IsGameCompleted)
                {
                    <div class="alert alert-success">
                        <h4>🏆 Oyun Bitti!</h4>
                    <p><strong>@(Model.GameWinner == "Sol" ? "🔴 Kırmızı Takım" : "🔵 Mavi Takım")</strong> oyunu kazandı!</p>
                    </div>
                @if (Model.Lobby.HostPlayerName == currentPlayerName)
                    {
                    <button class="btn btn-primary btn-lg" onclick="resetGame()">
                        <i class="fas fa-home"></i> Herkesi Lobiye Döndür
                            </button>
                    }
                    else
                    {
                        <p class="text-muted">Host'un herkesi lobiye döndürmesi bekleniyor...</p>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <h4>Round Bitti!</h4>
                            @{
                                var roundEndMessage = $"<strong>{(gameState.Winner == "Sol" ? "🔴 Kırmızı Takım" : "🔵 Mavi Takım")}</strong> bu round'u kazandı!";
                                if (!string.IsNullOrEmpty(gameState?.RoundEndMessage))
                                {
                                    roundEndMessage = gameState.RoundEndMessage;
                                }
                            }
                            <p>@Html.Raw(roundEndMessage)</p>
                        </div>
                        
                    @if (Model.Lobby.HostPlayerName == currentPlayerName)
                        {
                            <div class="card mt-3">
                                <div class="card-body">
                                <form method="post" action="/Game/StartNewRound" class="row g-3 justify-content-center align-items-center">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="code" value="@Model.Lobby.LobbyCode" />
                                    <div class="col-md-6">
                                        <label for="categorySelect" class="form-label">Yeni Round için Kategori Değiştir (İsteğe Bağlı)</label>
                                        <select class="form-select" name="newCategoryName" id="categorySelect">
                                            <option value="">Mevcut Kategoriyi Koru (@Model.Lobby.Category)</option>
                                            @foreach (var category in Model.Categories)
                                            {
                                                <option value="@category.Name">@category.Name</option>
                                            }
                                            </select>
                                        </div>
                                    <div class="col-md-4 mt-auto">
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <i class="fas fa-redo"></i> Yeni Round Başlat
                                    </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    }
                }
                </div>
            </div>
        }

    <!-- Soru Bölümü -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header text-center">
                    <h5>Soru</h5>
                </div>
                <div class="card-body text-center">
                    <h4 id="questionText" class="text-primary">@(gameState?.CurrentQuestion?.Text ?? "Oyun henüz başlamadı")</h4>
                    
                    <div id="turnInfo">
                        @if (gameState?.IsGameActive == true)
                        {
                            <div class="mt-3">
                                <p class="text-muted">
                                    Sıra: <strong id="current-turn-player" class="@(gameState.CurrentTurn == gameState.ActivePlayer1 ? "text-danger" : "text-primary")">
                                        @gameState.CurrentTurn
                                    </strong>
                                </p>
                                <div id="timerStatus" class="mt-2">
                                    @if (gameState.IsTimerRunning)
                                    {
                                        <span class="badge bg-warning">⏰ Süre İşliyor!</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">⏸️ Süre Durdu</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Kontrol Butonları -->
    <div id="answer-form-container" class="row mb-4" style="display: none;">
        <div class="col-12 text-center">
            <form id="answerForm" class="d-flex justify-content-center align-items-center" onsubmit="event.preventDefault();">
                <div class="input-group">
                    <input type="text" id="answerInput" class="form-control form-control-lg" placeholder="Cevabınızı yazın..." oninput="checkAnswer()" autocomplete="off">
                    <button class="btn btn-outline-secondary" type="button" id="speechBtn" onclick="toggleSpeechRecognition()">
                        <i class="fas fa-microphone"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Oyuncu Listeleri -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h6 class="mb-0">🔴 Kırmızı Takım</h6>
                </div>
                <ul class="list-group list-group-flush" id="team1Players">
                    @foreach (var player in Model.Lobby.Players.Where(p => p.Team == "Sol"))
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                @player.Name
                                @if (player.Name == Model.Lobby.GameState?.Team1Volunteer)
                                {
                                    <span class="badge bg-warning ms-2">Gönüllü</span>
                                }
                                @if (player.Name == currentPlayerName)
                                {
                                    <span class="badge bg-info ms-2">SEN</span>
                                }
                            </span>
                            <span>
                                @if (player.Name == currentPlayerName)
                                {
                                    <button type="button"
                                            class="btn btn-sm btn-outline-warning ms-2"
                                            onclick="volunteerForTeam('Sol')"
                                            @(player.Name == Model.Lobby.GameState?.Team1Volunteer ? "disabled" : "")>
                                        Gönüllü Ol
                                    </button>
                                }
                            </span>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-0">🔵 Mavi Takım</h6>
                </div>
                <ul class="list-group list-group-flush" id="team2Players">
                    @foreach (var player in Model.Lobby.Players.Where(p => p.Team == "Sağ"))
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                @player.Name
                                @if (player.Name == Model.Lobby.GameState?.Team2Volunteer)
                                {
                                    <span class="badge bg-warning ms-2">Gönüllü</span>
                                }
                                @if (player.Name == currentPlayerName)
                                {
                                    <span class="badge bg-info ms-2">SEN</span>
                                }
                            </span>
                            <span>
                                @if (player.Name == currentPlayerName)
                                {
                                    <button type="button"
                                            class="btn btn-sm btn-outline-warning ms-2"
                                            onclick="volunteerForTeam('Sağ')"
                                            @(player.Name == Model.Lobby.GameState?.Team2Volunteer ? "disabled" : "")>
                                        Gönüllü Ol
                                    </button>
                                }
                            </span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<style>
    #movingPoint {
        transition: left 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    }
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script>
        window.lobbyCode = '@Model.Lobby.LobbyCode';
        window.currentPlayerName = '@currentPlayerName';
        window.requestVerificationToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
    </script>
    <script src="~/js/game.js"></script>
}